<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background: #0f0f0f;
            min-height: 100vh;
            position: relative;
            overflow: hidden;
        }

        body::before {
            content: '';
            position: fixed;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: 
                radial-gradient(circle at 30% 20%, rgba(99, 102, 241, 0.15) 0%, transparent 40%),
                radial-gradient(circle at 70% 80%, rgba(99, 102, 241, 0.1) 0%, transparent 35%),
                radial-gradient(circle at center, transparent 0%, #000 70%),
                repeating-linear-gradient(45deg, rgba(30,30,30,0.1) 0px, rgba(30,30,30,0.1) 2px, transparent 2px, transparent 20px);
            z-index: 0;
        }

        .light-trail {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
            overflow: hidden;
        }

        .light-trail::before {
            content: '';
            position: absolute;
            top: -10%;
            left: -10%;
            width: 120%;
            height: 120%;
            background: 
                radial-gradient(circle at 30% 20%, rgba(99, 102, 241, 0.15) 0%, transparent 40%),
                radial-gradient(circle at 70% 80%, rgba(99, 102, 241, 0.1) 0%, transparent 35%);
            filter: blur(20px);
        }

        .glass-effect {
            background: rgba(18, 18, 18, 0.8);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
        }

        .loading {
            width: 16px;
            height: 16px;
            margin-left: 8px;
            border-radius: 50%;
            display: none;
            position: relative;
        }

        .loading::before,
        .loading::after {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: 50%;
        }

        .loading::before {
            background: conic-gradient(
                transparent 0%,
                rgba(99, 102, 241, 0.8) 50%,
                transparent 100%
            );
            animation: rotate 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
        }

        .loading::after {
            background: #121212;
            transform: scale(0.85);
        }

        @keyframes rotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        .shake {
            animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
        }

        @keyframes shake {
            10%, 90% { transform: translate3d(-1px, 0, 0); }
            20%, 80% { transform: translate3d(2px, 0, 0); }
            30%, 50%, 70% { transform: translate3d(-4px, 0, 0); }
            40%, 60% { transform: translate3d(4px, 0, 0); }
        }

        .toast {
            position: fixed;
            bottom: 24px;
            right: 24px;
            padding: 12px 24px;
            border-radius: 8px;
            color: white;
            font-weight: 500;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .toast.show {
            opacity: 1;
        }
    </style>
</head>
<body class="text-white">
    <div class="light-trail"></div>
    
    <main class="min-h-screen flex items-center justify-center p-4 relative z-10">
        <div class="glass-effect p-8 w-full max-w-md rounded-2xl">
            <div class="text-center mb-8">
                <h1 class="text-2xl font-bold mb-2">Create Account</h1>
                <p class="text-gray-400">Sign up to get started</p>
            </div>

            <div class="mb-6">
                <a href="/login" class="w-full bg-[#5865F2] hover:bg-[#4752C4] py-2 px-4 rounded-lg font-medium transition flex items-center justify-center">
                    <svg width="20" height="20" viewBox="0 0 24 24" class="mr-2" fill="currentColor">
                        <path d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"/>
                    </svg>
                    Continue with Discord
                </a>
            </div>

            <div class="relative flex items-center justify-center mb-6">
                <div class="absolute w-full border-t border-white/10"></div>
                <div class="relative bg-[#121212] px-4 text-sm text-white/30">or</div>
            </div>

            <form id="registerForm" class="space-y-4">
                <div>
                    <label for="username" class="block text-sm font-medium mb-1">Username</label>
                    <input type="text" id="username" name="username" required
                        class="w-full px-4 py-2 bg-black/50 border border-white/10 rounded-lg focus:outline-none focus:border-indigo-500">
                </div>

                <div>
                    <label for="email" class="block text-sm font-medium mb-1">Email</label>
                    <input type="email" id="email" name="email" required
                        class="w-full px-4 py-2 bg-black/50 border border-white/10 rounded-lg focus:outline-none focus:border-indigo-500">
                </div>

                <div>
                    <label for="password" class="block text-sm font-medium mb-1">Password</label>
                    <input type="password" id="password" name="password" required 
                        class="w-full px-4 py-2 bg-black/50 border border-white/10 rounded-lg focus:outline-none focus:border-indigo-500">
                </div>

                <div>
                    <label for="confirmPassword" class="block text-sm font-medium mb-1">Confirm Password</label>
                    <input type="password" id="confirmPassword" name="confirmPassword" required 
                        class="w-full px-4 py-2 bg-black/50 border border-white/10 rounded-lg focus:outline-none focus:border-indigo-500">
                </div>

                <div class="space-y-4">
                    <button type="submit" class="w-full bg-indigo-600 hover:bg-indigo-700 py-2 px-4 rounded-lg font-medium transition flex items-center justify-center">
                        Register
                        <div class="loading" id="registerSpinner"></div>
                    </button>

                    <div class="text-center">
                        <a href="/auth" class="text-sm text-indigo-400 hover:text-indigo-300 transition">
                            Already have an account? Sign in
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </main>

    <div id="toast" class="toast"></div>

message.txt

    <script>
    document.addEventListener('DOMContentLoaded', (event) => {
        const registerForm = document.getElementById('registerForm');
        const registerSpinner = document.getElementById('registerSpinner');
        const toast = document.getElementById('toast');
        const loginLink = document.getElementById('loginLink');

        function showToast(message, type = 'error') {
            toast.textContent = message;
            toast.classList.remove('bg-red-500', 'bg-emerald-500');
            toast.classList.add(type === 'error' ? 'bg-red-500' : 'bg-emerald-500');
            toast.classList.remove('opacity-0');
            toast.classList.add('opacity-100', 'slide-in');
            setTimeout(() => {
                toast.classList.remove('opacity-100', 'slide-in');
                toast.classList.add('opacity-0');
            }, 3000);
        }

        registerForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            registerSpinner.style.display = 'inline-block';

            const username = document.getElementById('username').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            if (password !== confirmPassword) {
                showToast('Passwords do not match.');
                registerSpinner.style.display = 'none';
                return;
            }

            try {
                const response = await fetch('/auth/register', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        username, 
                        email, 
                        password
                    }),
                });

                const data = await response.json();

                if (response.ok) {
                    showToast('Registration successful!', 'success');
                    setTimeout(() => {
                        window.location.href = '/';
                    }, 2000);
                } else {
                    showToast(data.error || 'Registration failed. Please try again.');
                    registerForm.classList.add('error-shake');
                    setTimeout(() => registerForm.classList.remove('error-shake'), 1000);
                }
            } catch (error) {
                showToast('An error occurred. Please try again later.');
            } finally {
                registerSpinner.style.display = 'none';
            }
        });

        loginLink.addEventListener('click', (e) => {
            e.preventDefault();
            window.location.href = '/auth';
        });
    });
    </script>
</body>
</html>