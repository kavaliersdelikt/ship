<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background: #0f0f0f;
            min-height: 100vh;
            position: relative;
            overflow: hidden;
        }

        body::before {
            content: '';
            position: fixed;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: 
                radial-gradient(circle at 30% 20%, rgba(147, 51, 234, 0.15) 0%, transparent 40%),
                radial-gradient(circle at 70% 80%, rgba(147, 51, 234, 0.1) 0%, transparent 35%),
                radial-gradient(circle at center, transparent 0%, #000 70%),
                repeating-linear-gradient(45deg, rgba(30,30,30,0.1) 0px, rgba(30,30,30,0.1) 2px, transparent 2px, transparent 20px);
            z-index: 0;
        }

        .light-trail {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
            overflow: hidden;
        }

        .light-trail::before {
            content: '';
            position: absolute;
            top: -10%;
            left: -10%;
            width: 120%;
            height: 120%;
            background: 
                radial-gradient(ellipse at 30% 40%, rgba(147, 51, 234, 0.2) 0%, transparent 70%),
                radial-gradient(ellipse at 70% 60%, rgba(168, 85, 247, 0.2) 0%, transparent 70%),
                radial-gradient(circle at 50% 50%, rgba(147, 51, 234, 0.1) 0%, transparent 60%);
            filter: blur(20px);
        }

        .light-trail::after {
            content: '';
            position: absolute;
            width: 800px;
            height: 200px;
            top: 30%;
            left: 50%;
            transform: translate(-50%, -50%) rotate(-30deg);
            background: linear-gradient(90deg, 
                transparent,
                rgba(147, 51, 234, 0.1),
                rgba(168, 85, 247, 0.2),
                rgba(147, 51, 234, 0.1),
                transparent
            );
            filter: blur(40px);
            box-shadow: 
                0 0 100px rgba(147, 51, 234, 0.3),
                0 0 200px rgba(147, 51, 234, 0.2),
                0 0 300px rgba(147, 51, 234, 0.1);
        }
        
        .glass-effect {
            background: rgba(18, 18, 18, 0.8);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
        }

        .loading {
            display: none;
            position: relative;
            width: 24px;
            height: 24px;
            margin-left: 8px;
            overflow: hidden;
        }

        .loading::before,
        .loading::after {
            content: '';
            position: absolute;
            inset: 0;
            border-radius: 50%;
        }

        .loading::before {
            background: conic-gradient(
                transparent 0%,
                rgba(147, 51, 234, 0.8) 50%,
                transparent 100%
            );
            animation: rotate 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
        }

        .loading::after {
            background: #121212;
            transform: scale(0.85);
        }

        @keyframes rotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .shake {
            animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
        }

        @keyframes shake {
            10%, 90% { transform: translate3d(-1px, 0, 0); }
            20%, 80% { transform: translate3d(2px, 0, 0); }
            30%, 50%, 70% { transform: translate3d(-4px, 0, 0); }
            40%, 60% { transform: translate3d(4px, 0, 0); }
        }

        .toast {
            position: fixed;
            bottom: 24px;
            right: 24px;
            padding: 12px 24px;
            border-radius: 8px;
            color: white;
            font-weight: 500;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .toast.show {
            opacity: 1;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            align-items: center;
            justify-content: center;
        }

        .modal.show {
            display: flex;
        }
    </style>
</head>
<body class="text-white">
    <div class="light-trail"></div>
    
    <main class="min-h-screen flex items-center justify-center p-4 relative z-10">
        <div class="glass-effect p-8 w-full max-w-md rounded-2xl">
            <div class="text-center mb-8">
                <h1 class="text-2xl font-bold mb-2">Welcome Back</h1>
                <p class="text-gray-400">Sign in to continue</p>
            </div>

            <form id="loginForm" class="space-y-4">
                <div>
                    <label for="email" class="block text-sm font-medium mb-1">Email</label>
                    <input type="email" id="email" name="email" required
                        class="w-full px-4 py-2 bg-black/50 border border-white/10 rounded-lg focus:outline-none focus:border-purple-500">
                </div>

                <div>
                    <label for="password" class="block text-sm font-medium mb-1">Password</label>
                    <input type="password" id="password" name="password" required 
                        class="w-full px-4 py-2 bg-black/50 border border-white/10 rounded-lg focus:outline-none focus:border-purple-500">
                </div>

                <div class="space-y-4">
                    <button type="submit" class="w-full bg-purple-600/80 hover:bg-purple-700/80 py-2 px-4 rounded-lg font-medium transition flex items-center justify-center group">
                        Sign In
                        <div class="loading" id="loginSpinner"></div>
                    </button>

                    <div class="relative flex items-center justify-center">
                        <div class="absolute inset-x-0 h-px bg-gradient-to-r from-transparent via-white/10 to-transparent"></div>
                        <span class="relative px-4 text-sm font-medium text-white/40 bg-[#121212]">or</span>
                    </div>

                    <a href="/login" class="relative w-full bg-[#5865F2]/80 hover:bg-[#4752C4]/80 py-2 px-4 rounded-lg font-medium transition flex items-center justify-center group overflow-hidden">
                        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-500"></div>
                        <svg class="w-5 h-5 mr-2" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515a.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0a12.64 12.64 0 0 0-.617-1.25a.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057a19.9 19.9 0 0 0 5.993 3.03a.078.078 0 0 0 .084-.028a14.09 14.09 0 0 0 1.226-1.994a.076.076 0 0 0-.041-.106a13.107 13.107 0 0 1-1.872-.892a.077.077 0 0 1-.008-.128a10.2 10.2 0 0 0 .372-.292a.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127a12.299 12.299 0 0 1-1.873.892a.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028a19.839 19.839 0 0 0 6.002-3.03a.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.956-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.955-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.946 2.418-2.157 2.418z"/>
                        </svg>
                        Sign in with Discord
                    </a>
                </div>
            </form>

            <div class="mt-6 text-center">
                <p class="text-gray-400">
                    Don't have an account? 
                    <a href="/register" class="text-purple-400 hover:text-purple-300">Sign up</a>
                </p>
            </div>
        </div>
    </main>

    <div id="toast" class="toast"></div>

    <script>
        const loginForm = document.getElementById('loginForm');
        const spinner = document.getElementById('loginSpinner');
        const toast = document.getElementById('toast');

        function showToast(message, type = 'error') {
            toast.textContent = message;
            toast.className = `toast show ${type === 'error' ? 'bg-red-500' : 'bg-green-500'}`;
            setTimeout(() => toast.classList.remove('show'), 3000);
        }

        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            spinner.style.display = 'block';

            try {
                const response = await fetch('/auth/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        email: document.getElementById('email').value,
                        password: document.getElementById('password').value
                    })
                });

                const data = await response.json();

                if (response.ok) {
                    showToast('Login successful!', 'success');
                    window.location.href = '/dashboard';
                } else {
                    showToast(data.error || 'Login failed');
                    loginForm.classList.add('shake');
                    setTimeout(() => loginForm.classList.remove('shake'), 500);
                }
            } catch (err) {
                showToast('An error occurred');
            } finally {
                spinner.style.display = 'none';
            }
        });
    </script>
</body>
</html>