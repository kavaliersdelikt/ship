name = "Ship.rocks"
timezone = "Europe/London"
icon = "FAVICON_HERE"
version = "1.x"

testing = true
clusters = 2
database = "sqlite://main.db"

[pterodactyl]
domain = ""
key = ""
client_key = ""

# Mail - Resend (optional)
resend_api_key = ""

# Recaptcha (soon)
recaptcha_secret = ""
recaptcha_sitekey = ""

# Webserver
[website]
port = 3000
secret = "change_me"
domain = "http://localhost"

# general settings
[api.client]
accountSwitcher = true

  [api.client.api]
  enabled = true
  code = "change_me"


  [api.client.bot]
  token = "DISCORD_BOT_TOKEN_HERE"

    [api.client.bot.joinguild]
    enabled = true
    guildid = [""]

    [api.client.bot.giverole]
    enabled = true
    guildid = ""
    roleid = ""

  [api.client.passwordgenerator]
  signup = true
  length = 24

  [api.client.allow]
  newusers = true
  regen = true
  overresourcessuspend = false

    [api.client.allow.server]
    create = true
    modify = true
    delete = true

  [api.client.oauth2]
  id = ""
  secret = ""
  link = ""
  callbackpath = "/callback"
  prompt = true

    

    [api.client.oauth2.ip]
    "trust x-forwarded-for" = true
    block = [ ]
    "duplicate check" = false

  [api.client.ratelimits]
  "/callback" = 2
  "/create" = 1
  "/delete" = 1
  "/modify" = 1
  "/updateinfo" = 1
  "/setplan" = 2
  "/admin" = 1
  "/regen" = 1
  "/renew" = 1
  "/api/userinfo" = 1

  [api.client.packages]
  default = "default"






# PACKAGES

[api.client.packages.list.default]
ram = 512
disk = 5000
cpu = 50
servers = 2


[api.client.packages.list.2]
ram = 6_144
disk = 30_720
cpu = 150
servers = 8

    [api.client.packages.rolePackages]
    roleServer = ""

      [api.client.packages.rolePackages.roles]
      "" = "2"





# LOCATIONS - NODES

[api.client.locations.1]
name = "FREYA_SKY"
pro = false





# EGGS

[api.client.eggs.paper]
display = "Minecraft - Paper"

  [api.client.eggs.paper.minimum]
  ram = 512
  disk = 1_024
  cpu = 25

  [api.client.eggs.paper.maximum]

  [api.client.eggs.paper.info]
  egg = 4
  docker_image = "ghcr.io/pterodactyl/yolks:java_21"
  startup = "java -Xms128M -Xmx{{SERVER_MEMORY}}M -Dterminal.jline=false -Dterminal.ansi=true -jar {{SERVER_JARFILE}}"

    [api.client.eggs.paper.info.environment]
    SERVER_JARFILE = "server.jar"
    BUILD_NUMBER = "latest"

    [api.client.eggs.paper.info.feature_limits]
    databases = 0
    backups = 1




[api.client.eggs.velocity]
pro = false
display = "Velocity"

  [api.client.eggs.velocity.minimum]
  ram = 256
  disk = 128
  cpu = 25

  [api.client.eggs.velocity.maximum]

  [api.client.eggs.velocity.info]
  egg = 15
  docker_image = "ghcr.io/zenllc/java:21"
  startup = "java -Xms128M -Xmx{{SERVER_MEMORY}}M {{JAVA_ARGUMENTS}} -jar {{SERVER_JARFILE}}"

    [api.client.eggs.velocity.info.environment]
    SERVER_JARFILE = "server.jar"
    VELOCITY_VERSION = "latest"
    JAVA_ARGUMENTS = "-XX:+UseG1GC -XX:G1HeapRegionSize=4M -XX:+UnlockExperimentalVMOptions -XX:+ParallelRefProcEnabled -XX:+AlwaysPreTouch -XX:MaxInlineLevel=15"
    BUILD_NUMBER = "latest"

    [api.client.eggs.velocity.info.feature_limits]
    databases = 0
    backups = 1



[api.client.eggs.nodejs]
pro = false
display = "NodeJS"

  [api.client.eggs.nodejs.minimum]
  ram = 512
  disk = 128
  cpu = 50

  [api.client.eggs.nodejs.maximum]

  [api.client.eggs.nodejs.info]
  egg = 15
  docker_image = "ghcr.io/parkervcp/yolks:nodejs_20"
  startup = 'if [[ -d .git ]] && [[ {{AUTO_UPDATE}} == "1" ]]; then git pull; fi; if [[ ! -z ${NODE_PACKAGES} ]]; then /usr/local/bin/npm install ${NODE_PACKAGES}; fi; if [[ ! -z ${UNNODE_PACKAGES} ]]; then /usr/local/bin/npm uninstall ${UNNODE_PACKAGES}; fi; if [ -f /home/container/package.json ]; then /usr/local/bin/npm install; fi; if [[ "${MAIN_FILE}" == "*.js" ]]; then /usr/local/bin/node "/home/container/${MAIN_FILE}" ${NODE_ARGS}; else /usr/local/bin/ts-node --esm "/home/container/${MAIN_FILE}" ${NODE_ARGS}; fi'

    [api.client.eggs.nodejs.info.environment]
    USER_UPLOAD = "0"
    GIT_ADDRESS = ""
    AUTO_UPDATE = "0"
    MAIN_FILE = "index.js"
    BRANCH = ""
    NODE_PACKAGES = ""
    USERNAME = ""
    ACCESS_TOKEN = ""
    UNNODE_PACKAGES = ""
    NODE_ARGS = ""

    [api.client.eggs.nodejs.info.feature_limits]
    databases = 4
    backups = 4

# EGGS END





[antivpn]
status = false
APIKey = "Proxycheck API Key"
whitelistedIPs = [ "IP address" ]






[whitelist]
status = false
users = [ "User ID" ]







[logging]
status = true
webhook = ""

[logging.actions.user]
signup = true
"create server" = true
"gifted coins" = true
"modify server" = true
"buy servers" = true
"buy ram" = true
"buy cpu" = true
"buy disk" = true

[logging.actions.admin]
"set coins" = true
"add coins" = true
"set resources" = true
"set plan" = true
"create coupon" = true
"revoke coupon" = true
"remove account" = true
"view ip" = true
